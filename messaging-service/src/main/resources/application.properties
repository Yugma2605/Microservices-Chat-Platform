spring.application.name=messaging-service
server.port=8083
# MySQL Configuration
#spring.datasource.url=jdbc:mysql://34.42.162.39/devDB?useSSL=false
spring.datasource.url=jdbc:mysql:///devDB?cloudSqlInstance=neat-pagoda-434617-g5:us-central1:microservicedb&socketFactory=com.google.cloud.sql.mysql.SocketFactory&user=root&password=root&useSSL=false
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate Configuration
spring.jpa.database=mysql
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.boot.allow_jdbc_metadata_access=false
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

database=mysql

spring.cloud.gcp.sql.database-name=devDB
spring.cloud.gcp.sql.instance-connection-name=neat-pagoda-434617-g5:us-central1:microservicedb

# Initialize the database since the newly created Cloud SQL database has no tables. The following flag is for Spring Boot 2.5+.
spring.sql.init.mode=always
spring.profiles.active=mysql


spring.kafka.consumer.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id: myGroup
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
# spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.topic.name=javaguides
spring.kafka.topic-json.name=javaguides_json

eureka.client.serviceUrl.defaultZone=http://${EUREKA_SERVER_HOST:discovery-service}:8761/eureka
